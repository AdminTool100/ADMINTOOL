import requests
import json
from fastapi import FastAPI
from fastapi.responses import JSONResponse

app = FastAPI()

# Load cÃ´ng thá»©c 8k vÃ  báº£ng quy táº¯c
with open("8k_cong_thuc.json", "r", encoding="utf-8") as f:
    cong_thuc = json.load(f)

with open("thuattoan.json", "r", encoding="utf-8") as f:
    thuattoan = json.load(f)

# ------------------- Láº¥y dá»¯ liá»‡u lá»‹ch sá»­ -------------------
def fetch_data():
    try:
        res = requests.get("https://saobody-lopq.onrender.com/api/taixiu/history")
        res.raise_for_status()
        lines = res.text.strip().splitlines()
        data = [json.loads(line) for line in lines if line.strip()]
        return data
    except:
        return []

# ------------------- Chuyá»ƒn "TÃ i"/"Xá»‰u" thÃ nh "T"/"X" -------------------
def convert_to_tx(results):
    return ''.join(["T" if r.lower().strip() == "tÃ i" else "X" for r in results])

# ------------------- Dá»± Ä‘oÃ¡n theo cÃ´ng thá»©c 8k -------------------
def predict_by_cong_thuc(history: str):
    for length in range(8, 2, -1):
        pattern = history[-length:]
        if pattern in cong_thuc:
            entry = cong_thuc[pattern]
            return {
                "du_doan": "TÃ i" if entry["next"] == "T" else "Xá»‰u",
                "confidence": entry["confidence"],
                "matched_pattern": pattern
            }
    return None

# ------------------- Dá»± Ä‘oÃ¡n theo báº£ng thuattoan -------------------
def predict_by_thuattoan(history: str):
    for length in range(5, 0, -1):
        pattern = history[-length:]
        if pattern in thuattoan:
            result = thuattoan[pattern]
            return {
                "du_doan": result,
                "confidence": 60,
                "matched_pattern": pattern
            }
    return None

# ------------------- Trang chá»§ -------------------
@app.get("/")
def home():
    return {"message": "ðŸŽ² API Dá»± Ä‘oÃ¡n TÃ i/Xá»‰u báº±ng CÃ´ng thá»©c thá»‘ng kÃª Ä‘Ã£ sáºµn sÃ ng."}

# ------------------- API Dá»± Ä‘oÃ¡n -------------------
@app.get("/predict")
def predict():
    data = fetch_data()
    if len(data) < 10:
        return JSONResponse(content={"error": "KhÃ´ng Ä‘á»§ dá»¯ liá»‡u Ä‘á»ƒ dá»± Ä‘oÃ¡n"})

    data = sorted(data, key=lambda x: x["session"])  # sáº¯p xáº¿p tÄƒng dáº§n
    current = data[-1]
    current_session = current["session"]

    # Táº¡o chuá»—i káº¿t quáº£
    result_list = [item["result"] for item in data]
    history_str = convert_to_tx(result_list)

    # Dá»± Ä‘oÃ¡n Æ°u tiÃªn cÃ´ng thá»©c 8k
    prediction = predict_by_cong_thuc(history_str) or predict_by_thuattoan(history_str)

    if not prediction:
        return JSONResponse(content={"error": "KhÃ´ng tÃ¬m Ä‘Æ°á»£c máº«u phÃ¹ há»£p Ä‘á»ƒ dá»± Ä‘oÃ¡n"})

    return {
        "current_session": current_session,
        "dice": current["dice"],
        "total": current["total"],
        "result": current["result"],
        "next_session": current_session + 1,
        "du_doan": prediction["du_doan"],
        "confidence": f"{prediction['confidence']}%",
        "matched_pattern": prediction["matched_pattern"]
    }